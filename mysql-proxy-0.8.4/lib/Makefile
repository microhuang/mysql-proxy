# Makefile.in generated by automake 1.10 from Makefile.am.
# lib/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.







pkgdatadir = $(datadir)/mysql-proxy
pkglibdir = $(libdir)/mysql-proxy
pkgincludedir = $(includedir)/mysql-proxy
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-redhat-linux-gnu
host_triplet = i686-redhat-linux-gnu
target_triplet = i686-redhat-linux-gnu
am__append_1 = ${example_scripts}
noinst_PROGRAMS = sql-tokenizer-gen$(EXEEXT)
subdir = lib
DIST_COMMON = $(am__dist_doc_DATA_DIST) $(dist_luaext_DATA) \
	$(noinst_HEADERS) $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	sql-tokenizer.c
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/sed.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(luaextdir)" "$(DESTDIR)$(docdir)" \
	"$(DESTDIR)$(luaextdir)"
luaextLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(luaext_LTLIBRARIES)
am__DEPENDENCIES_1 =
chassis_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	${top_builddir}/src/libmysql-chassis.la
am_chassis_la_OBJECTS = chassis_la-chassis.lo
chassis_la_OBJECTS = $(am_chassis_la_OBJECTS)
chassis_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(chassis_la_LDFLAGS) $(LDFLAGS) -o $@
glib2_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_glib2_la_OBJECTS = glib2_la-glib2.lo
glib2_la_OBJECTS = $(am_glib2_la_OBJECTS)
glib2_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(glib2_la_LDFLAGS) \
	$(LDFLAGS) -o $@
lfs_la_LIBADD =
am_lfs_la_OBJECTS = lfs_la-lfs.lo
lfs_la_OBJECTS = $(am_lfs_la_OBJECTS)
lfs_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(lfs_la_LDFLAGS) \
	$(LDFLAGS) -o $@
lpeg_la_LIBADD =
am_lpeg_la_OBJECTS = lpeg_la-lpeg.lo
lpeg_la_OBJECTS = $(am_lpeg_la_OBJECTS)
lpeg_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(lpeg_la_LDFLAGS) \
	$(LDFLAGS) -o $@
mysql_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	${top_builddir}/src/libmysql-proxy.la
am_mysql_la_OBJECTS = mysql_la-mysql-proto.lo \
	mysql_la-mysql-password.lo mysql_la-sql-tokenizer.lo \
	mysql_la-sql-tokenizer-tokens.lo \
	mysql_la-sql-tokenizer-keywords.lo \
	mysql_la-sql-tokenizer-lua.lo
mysql_la_OBJECTS = $(am_mysql_la_OBJECTS)
mysql_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(mysql_la_LDFLAGS) \
	$(LDFLAGS) -o $@
posix_la_LIBADD =
am_posix_la_OBJECTS = posix_la-posix.lo
posix_la_OBJECTS = $(am_posix_la_OBJECTS)
posix_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(posix_la_LDFLAGS) \
	$(LDFLAGS) -o $@
PROGRAMS = $(noinst_PROGRAMS)
am_sql_tokenizer_gen_OBJECTS =  \
	sql_tokenizer_gen-sql-tokenizer-gen.$(OBJEXT) \
	sql_tokenizer_gen-sql-tokenizer-tokens.$(OBJEXT)
sql_tokenizer_gen_OBJECTS = $(am_sql_tokenizer_gen_OBJECTS)
sql_tokenizer_gen_DEPENDENCIES = $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
#am__skiplex = test -f $@ ||
LEXCOMPILE = $(LEX) $(LFLAGS) $(AM_LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(LEX) $(LFLAGS) $(AM_LFLAGS)
YLWRAP = $(top_srcdir)/ylwrap
SOURCES = $(chassis_la_SOURCES) $(glib2_la_SOURCES) $(lfs_la_SOURCES) \
	$(lpeg_la_SOURCES) $(mysql_la_SOURCES) $(posix_la_SOURCES) \
	$(sql_tokenizer_gen_SOURCES)
DIST_SOURCES = $(chassis_la_SOURCES) $(glib2_la_SOURCES) \
	$(lfs_la_SOURCES) $(lpeg_la_SOURCES) $(mysql_la_SOURCES) \
	$(posix_la_SOURCES) $(sql_tokenizer_gen_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__dist_doc_DATA_DIST = active-queries.lua active-transactions.lua \
	admin-sql.lua analyze-query.lua auditing.lua \
	commit-obfuscator.lua commit-obfuscator.msc histogram.lua \
	load-multi.lua ro-balance.lua ro-pooling.lua rw-splitting.lua \
	xtab.lua
dist_docDATA_INSTALL = $(INSTALL_DATA)
dist_luaextDATA_INSTALL = $(INSTALL_DATA)
DATA = $(dist_doc_DATA) $(dist_luaext_DATA)
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /mnt/hgfs/micro/think/mysql-proxy-0.8.4/mysql-proxy-0.8.4/missing --run aclocal-1.10
AMTAR = ${SHELL} /mnt/hgfs/micro/think/mysql-proxy-0.8.4/mysql-proxy-0.8.4/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /mnt/hgfs/micro/think/mysql-proxy-0.8.4/mysql-proxy-0.8.4/missing --run autoconf
AUTOHEADER = ${SHELL} /mnt/hgfs/micro/think/mysql-proxy-0.8.4/mysql-proxy-0.8.4/missing --run autoheader
AUTOMAKE = ${SHELL} /mnt/hgfs/micro/think/mysql-proxy-0.8.4/mysql-proxy-0.8.4/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DARWIN_HAS_LIBPROC_H = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DTRACE = dtrace
DUMPBIN = 
DYNLIB_LUA_SUFFIX = so
DYNLIB_PATH_VAR = LD_LIBRARY_PATH
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EVENT_LIBS = -levent
EXEEXT = 
FGREP = /bin/grep -F
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GLIB_LIBS = -lglib-2.0  
GMODULE_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GMODULE_LIBS = -Wl,--export-dynamic -lgmodule-2.0 -ldl -lglib-2.0  
GREP = /bin/grep
GTHREAD_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GTHREAD_LIBS = -pthread -lgthread-2.0 -lrt -lglib-2.0  
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = -lm -ldl
LEX = flex
LEXLIB = -lfl
LEXMISSING = 
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS =  ${LIBOBJDIR}lstat$U.o
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = cp -p
LTLIBOBJS =  ${LIBOBJDIR}lstat$U.lo
LUA_CFLAGS =  
LUA_LIBS = -llua -lm -ldl  
MAINT = 
MAKEINFO = ${SHELL} /mnt/hgfs/micro/think/mysql-proxy-0.8.4/mysql-proxy-0.8.4/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MYSQL_CFLAGS = -I/usr/include/mysql
MYSQL_CONFIG = /usr/bin/mysql_config
MYSQL_LIBS = -rdynamic -L/usr/lib/mysql -lmysqlclient -lz -lcrypt -lnsl -lm -lmygcc
MYSQL_TEST_BIN = /usr/bin/mysqltest
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = mysql-proxy
PACKAGE_BUGREPORT = mysql-proxy-discuss@lists.launchpad.net
PACKAGE_NAME = mysql-proxy
PACKAGE_STRING = mysql-proxy 0.8.4
PACKAGE_TARNAME = mysql-proxy
PACKAGE_URL = 
PACKAGE_VERSION = 0.8.4
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
RST2HTML = ${SHELL} /mnt/hgfs/micro/think/mysql-proxy-0.8.4/mysql-proxy-0.8.4/missing --run rst2html.py
RST2HTMLMISSING = ${SHELL} /mnt/hgfs/micro/think/mysql-proxy-0.8.4/mysql-proxy-0.8.4/missing --run rst2html.py
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.8.4
abs_builddir = /mnt/hgfs/micro/think/mysql-proxy-0.8.4/mysql-proxy-0.8.4/lib
abs_srcdir = /mnt/hgfs/micro/think/mysql-proxy-0.8.4/mysql-proxy-0.8.4/lib
abs_top_builddir = /mnt/hgfs/micro/think/mysql-proxy-0.8.4/mysql-proxy-0.8.4
abs_top_srcdir = /mnt/hgfs/micro/think/mysql-proxy-0.8.4/mysql-proxy-0.8.4
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-redhat-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = redhat
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-redhat-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = redhat
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /mnt/hgfs/micro/think/mysql-proxy-0.8.4/mysql-proxy-0.8.4/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = i686-redhat-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = redhat
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

#  $%BEGINLICENSE%$
#  Copyright (c) 2009, 2010, Oracle and/or its affiliates. All rights reserved.
# 
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License as
#  published by the Free Software Foundation; version 2 of the
#  License.
# 
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
# 
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
#  02110-1301  USA
# 
#  $%ENDLICENSE%$
luaextdir = ${pkglibdir}/lua
SUBDIRS = proxy 
example_scripts = \
		active-queries.lua \
		active-transactions.lua \
		admin-sql.lua \
		analyze-query.lua \
		auditing.lua \
		commit-obfuscator.lua \
		commit-obfuscator.msc \
		histogram.lua \
		load-multi.lua \
		ro-balance.lua \
		ro-pooling.lua \
		rw-splitting.lua \
		xtab.lua

EXTRA_DIST = $(am__append_1) glib2.def lfs.def chassis.def lpeg.def \
	mysql.def posix.def CMakeLists.txt
#dist_doc_DATA = ${example_scripts}
dist_luaext_DATA = \
	admin.lua

luaext_LTLIBRARIES = lfs.la glib2.la chassis.la mysql.la lpeg.la posix.la
lfs_la_SOURCES = lfs.c
lfs_la_CPPFLAGS = ${LUA_CFLAGS}
lfs_la_LDFLAGS = $(AM_LDFLAGS) -module -avoid-version
posix_la_SOURCES = posix.c
posix_la_CPPFLAGS = ${LUA_CFLAGS}
posix_la_LDFLAGS = $(AM_LDFLAGS) -module -avoid-version
glib2_la_SOURCES = glib2.c
glib2_la_CPPFLAGS = ${LUA_CFLAGS} ${GLIB_CFLAGS}
glib2_la_LDFLAGS = $(AM_LDFLAGS) -module -avoid-version
glib2_la_LIBADD = $(GLIB_LIBS)
chassis_la_SOURCES = chassis.c
chassis_la_CPPFLAGS = ${LUA_CFLAGS} ${GLIB_CFLAGS} -I${top_srcdir}/src/
chassis_la_LDFLAGS = $(AM_LDFLAGS) -module -avoid-version
chassis_la_LIBADD = ${GLIB_LIBS} ${top_builddir}/src/libmysql-chassis.la
mysql_la_SOURCES = \
	mysql-proto.c \
	mysql-password.c \
	sql-tokenizer.l \
	sql-tokenizer-tokens.c \
	sql-tokenizer-keywords.c \
	sql-tokenizer-lua.c 

mysql_la_CPPFLAGS = ${LUA_CFLAGS} ${GLIB_CFLAGS} -I${top_srcdir}/src/ ${MYSQL_CFLAGS} -I${top_builddir}/lib/
mysql_la_LDFLAGS = $(AM_LDFLAGS) -module -avoid-version
mysql_la_LIBADD = ${GLIB_LIBS} ${top_builddir}/src/libmysql-proxy.la
lpeg_la_SOURCES = lpeg.c
lpeg_la_CPPFLAGS = ${LUA_CFLAGS}
lpeg_la_LDFLAGS = $(AM_LDFLAGS) -module -avoid-version
noinst_HEADERS = \
	sql-tokenizer.h  \
	sql-tokenizer-keywords.h 

DISTCLEANFILES = \
	sql-tokenizer.c \
	sql-tokenizer-keywords.c

sql_tokenizer_gen_SOURCES = \
	sql-tokenizer-gen.c \
	sql-tokenizer-tokens.c

sql_tokenizer_gen_CPPFLAGS = ${GLIB_CFLAGS} -I${srcdir}
sql_tokenizer_gen_LDADD = ${GLIB_LIBS}
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .l .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnits  lib/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnits  lib/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-luaextLTLIBRARIES: $(luaext_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(luaextdir)" || $(MKDIR_P) "$(DESTDIR)$(luaextdir)"
	@list='$(luaext_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(luaextLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(luaextdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(luaextLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(luaextdir)/$$f"; \
	  else :; fi; \
	done

uninstall-luaextLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(luaext_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(luaextdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(luaextdir)/$$p"; \
	done

clean-luaextLTLIBRARIES:
	-test -z "$(luaext_LTLIBRARIES)" || rm -f $(luaext_LTLIBRARIES)
	@list='$(luaext_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
chassis.la: $(chassis_la_OBJECTS) $(chassis_la_DEPENDENCIES) 
	$(chassis_la_LINK) -rpath $(luaextdir) $(chassis_la_OBJECTS) $(chassis_la_LIBADD) $(LIBS)
glib2.la: $(glib2_la_OBJECTS) $(glib2_la_DEPENDENCIES) 
	$(glib2_la_LINK) -rpath $(luaextdir) $(glib2_la_OBJECTS) $(glib2_la_LIBADD) $(LIBS)
lfs.la: $(lfs_la_OBJECTS) $(lfs_la_DEPENDENCIES) 
	$(lfs_la_LINK) -rpath $(luaextdir) $(lfs_la_OBJECTS) $(lfs_la_LIBADD) $(LIBS)
lpeg.la: $(lpeg_la_OBJECTS) $(lpeg_la_DEPENDENCIES) 
	$(lpeg_la_LINK) -rpath $(luaextdir) $(lpeg_la_OBJECTS) $(lpeg_la_LIBADD) $(LIBS)
mysql.la: $(mysql_la_OBJECTS) $(mysql_la_DEPENDENCIES) 
	$(mysql_la_LINK) -rpath $(luaextdir) $(mysql_la_OBJECTS) $(mysql_la_LIBADD) $(LIBS)
posix.la: $(posix_la_OBJECTS) $(posix_la_DEPENDENCIES) 
	$(posix_la_LINK) -rpath $(luaextdir) $(posix_la_OBJECTS) $(posix_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
sql-tokenizer-gen$(EXEEXT): $(sql_tokenizer_gen_OBJECTS) $(sql_tokenizer_gen_DEPENDENCIES) 
	@rm -f sql-tokenizer-gen$(EXEEXT)
	$(LINK) $(sql_tokenizer_gen_OBJECTS) $(sql_tokenizer_gen_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/chassis_la-chassis.Plo
include ./$(DEPDIR)/glib2_la-glib2.Plo
include ./$(DEPDIR)/lfs_la-lfs.Plo
include ./$(DEPDIR)/lpeg_la-lpeg.Plo
include ./$(DEPDIR)/mysql_la-mysql-password.Plo
include ./$(DEPDIR)/mysql_la-mysql-proto.Plo
include ./$(DEPDIR)/mysql_la-sql-tokenizer-keywords.Plo
include ./$(DEPDIR)/mysql_la-sql-tokenizer-lua.Plo
include ./$(DEPDIR)/mysql_la-sql-tokenizer-tokens.Plo
include ./$(DEPDIR)/mysql_la-sql-tokenizer.Plo
include ./$(DEPDIR)/posix_la-posix.Plo
include ./$(DEPDIR)/sql_tokenizer_gen-sql-tokenizer-gen.Po
include ./$(DEPDIR)/sql_tokenizer_gen-sql-tokenizer-tokens.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

chassis_la-chassis.lo: chassis.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(chassis_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT chassis_la-chassis.lo -MD -MP -MF $(DEPDIR)/chassis_la-chassis.Tpo -c -o chassis_la-chassis.lo `test -f 'chassis.c' || echo '$(srcdir)/'`chassis.c
	mv -f $(DEPDIR)/chassis_la-chassis.Tpo $(DEPDIR)/chassis_la-chassis.Plo
#	source='chassis.c' object='chassis_la-chassis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(chassis_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o chassis_la-chassis.lo `test -f 'chassis.c' || echo '$(srcdir)/'`chassis.c

glib2_la-glib2.lo: glib2.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(glib2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT glib2_la-glib2.lo -MD -MP -MF $(DEPDIR)/glib2_la-glib2.Tpo -c -o glib2_la-glib2.lo `test -f 'glib2.c' || echo '$(srcdir)/'`glib2.c
	mv -f $(DEPDIR)/glib2_la-glib2.Tpo $(DEPDIR)/glib2_la-glib2.Plo
#	source='glib2.c' object='glib2_la-glib2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(glib2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o glib2_la-glib2.lo `test -f 'glib2.c' || echo '$(srcdir)/'`glib2.c

lfs_la-lfs.lo: lfs.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lfs_la-lfs.lo -MD -MP -MF $(DEPDIR)/lfs_la-lfs.Tpo -c -o lfs_la-lfs.lo `test -f 'lfs.c' || echo '$(srcdir)/'`lfs.c
	mv -f $(DEPDIR)/lfs_la-lfs.Tpo $(DEPDIR)/lfs_la-lfs.Plo
#	source='lfs.c' object='lfs_la-lfs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lfs_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lfs_la-lfs.lo `test -f 'lfs.c' || echo '$(srcdir)/'`lfs.c

lpeg_la-lpeg.lo: lpeg.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lpeg_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpeg_la-lpeg.lo -MD -MP -MF $(DEPDIR)/lpeg_la-lpeg.Tpo -c -o lpeg_la-lpeg.lo `test -f 'lpeg.c' || echo '$(srcdir)/'`lpeg.c
	mv -f $(DEPDIR)/lpeg_la-lpeg.Tpo $(DEPDIR)/lpeg_la-lpeg.Plo
#	source='lpeg.c' object='lpeg_la-lpeg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lpeg_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpeg_la-lpeg.lo `test -f 'lpeg.c' || echo '$(srcdir)/'`lpeg.c

mysql_la-mysql-proto.lo: mysql-proto.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mysql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mysql_la-mysql-proto.lo -MD -MP -MF $(DEPDIR)/mysql_la-mysql-proto.Tpo -c -o mysql_la-mysql-proto.lo `test -f 'mysql-proto.c' || echo '$(srcdir)/'`mysql-proto.c
	mv -f $(DEPDIR)/mysql_la-mysql-proto.Tpo $(DEPDIR)/mysql_la-mysql-proto.Plo
#	source='mysql-proto.c' object='mysql_la-mysql-proto.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mysql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mysql_la-mysql-proto.lo `test -f 'mysql-proto.c' || echo '$(srcdir)/'`mysql-proto.c

mysql_la-mysql-password.lo: mysql-password.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mysql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mysql_la-mysql-password.lo -MD -MP -MF $(DEPDIR)/mysql_la-mysql-password.Tpo -c -o mysql_la-mysql-password.lo `test -f 'mysql-password.c' || echo '$(srcdir)/'`mysql-password.c
	mv -f $(DEPDIR)/mysql_la-mysql-password.Tpo $(DEPDIR)/mysql_la-mysql-password.Plo
#	source='mysql-password.c' object='mysql_la-mysql-password.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mysql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mysql_la-mysql-password.lo `test -f 'mysql-password.c' || echo '$(srcdir)/'`mysql-password.c

mysql_la-sql-tokenizer.lo: sql-tokenizer.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mysql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mysql_la-sql-tokenizer.lo -MD -MP -MF $(DEPDIR)/mysql_la-sql-tokenizer.Tpo -c -o mysql_la-sql-tokenizer.lo `test -f 'sql-tokenizer.c' || echo '$(srcdir)/'`sql-tokenizer.c
	mv -f $(DEPDIR)/mysql_la-sql-tokenizer.Tpo $(DEPDIR)/mysql_la-sql-tokenizer.Plo
#	source='sql-tokenizer.c' object='mysql_la-sql-tokenizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mysql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mysql_la-sql-tokenizer.lo `test -f 'sql-tokenizer.c' || echo '$(srcdir)/'`sql-tokenizer.c

mysql_la-sql-tokenizer-tokens.lo: sql-tokenizer-tokens.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mysql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mysql_la-sql-tokenizer-tokens.lo -MD -MP -MF $(DEPDIR)/mysql_la-sql-tokenizer-tokens.Tpo -c -o mysql_la-sql-tokenizer-tokens.lo `test -f 'sql-tokenizer-tokens.c' || echo '$(srcdir)/'`sql-tokenizer-tokens.c
	mv -f $(DEPDIR)/mysql_la-sql-tokenizer-tokens.Tpo $(DEPDIR)/mysql_la-sql-tokenizer-tokens.Plo
#	source='sql-tokenizer-tokens.c' object='mysql_la-sql-tokenizer-tokens.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mysql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mysql_la-sql-tokenizer-tokens.lo `test -f 'sql-tokenizer-tokens.c' || echo '$(srcdir)/'`sql-tokenizer-tokens.c

mysql_la-sql-tokenizer-keywords.lo: sql-tokenizer-keywords.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mysql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mysql_la-sql-tokenizer-keywords.lo -MD -MP -MF $(DEPDIR)/mysql_la-sql-tokenizer-keywords.Tpo -c -o mysql_la-sql-tokenizer-keywords.lo `test -f 'sql-tokenizer-keywords.c' || echo '$(srcdir)/'`sql-tokenizer-keywords.c
	mv -f $(DEPDIR)/mysql_la-sql-tokenizer-keywords.Tpo $(DEPDIR)/mysql_la-sql-tokenizer-keywords.Plo
#	source='sql-tokenizer-keywords.c' object='mysql_la-sql-tokenizer-keywords.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mysql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mysql_la-sql-tokenizer-keywords.lo `test -f 'sql-tokenizer-keywords.c' || echo '$(srcdir)/'`sql-tokenizer-keywords.c

mysql_la-sql-tokenizer-lua.lo: sql-tokenizer-lua.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mysql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mysql_la-sql-tokenizer-lua.lo -MD -MP -MF $(DEPDIR)/mysql_la-sql-tokenizer-lua.Tpo -c -o mysql_la-sql-tokenizer-lua.lo `test -f 'sql-tokenizer-lua.c' || echo '$(srcdir)/'`sql-tokenizer-lua.c
	mv -f $(DEPDIR)/mysql_la-sql-tokenizer-lua.Tpo $(DEPDIR)/mysql_la-sql-tokenizer-lua.Plo
#	source='sql-tokenizer-lua.c' object='mysql_la-sql-tokenizer-lua.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mysql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mysql_la-sql-tokenizer-lua.lo `test -f 'sql-tokenizer-lua.c' || echo '$(srcdir)/'`sql-tokenizer-lua.c

posix_la-posix.lo: posix.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(posix_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT posix_la-posix.lo -MD -MP -MF $(DEPDIR)/posix_la-posix.Tpo -c -o posix_la-posix.lo `test -f 'posix.c' || echo '$(srcdir)/'`posix.c
	mv -f $(DEPDIR)/posix_la-posix.Tpo $(DEPDIR)/posix_la-posix.Plo
#	source='posix.c' object='posix_la-posix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(posix_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o posix_la-posix.lo `test -f 'posix.c' || echo '$(srcdir)/'`posix.c

sql_tokenizer_gen-sql-tokenizer-gen.o: sql-tokenizer-gen.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sql_tokenizer_gen_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sql_tokenizer_gen-sql-tokenizer-gen.o -MD -MP -MF $(DEPDIR)/sql_tokenizer_gen-sql-tokenizer-gen.Tpo -c -o sql_tokenizer_gen-sql-tokenizer-gen.o `test -f 'sql-tokenizer-gen.c' || echo '$(srcdir)/'`sql-tokenizer-gen.c
	mv -f $(DEPDIR)/sql_tokenizer_gen-sql-tokenizer-gen.Tpo $(DEPDIR)/sql_tokenizer_gen-sql-tokenizer-gen.Po
#	source='sql-tokenizer-gen.c' object='sql_tokenizer_gen-sql-tokenizer-gen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sql_tokenizer_gen_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sql_tokenizer_gen-sql-tokenizer-gen.o `test -f 'sql-tokenizer-gen.c' || echo '$(srcdir)/'`sql-tokenizer-gen.c

sql_tokenizer_gen-sql-tokenizer-gen.obj: sql-tokenizer-gen.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sql_tokenizer_gen_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sql_tokenizer_gen-sql-tokenizer-gen.obj -MD -MP -MF $(DEPDIR)/sql_tokenizer_gen-sql-tokenizer-gen.Tpo -c -o sql_tokenizer_gen-sql-tokenizer-gen.obj `if test -f 'sql-tokenizer-gen.c'; then $(CYGPATH_W) 'sql-tokenizer-gen.c'; else $(CYGPATH_W) '$(srcdir)/sql-tokenizer-gen.c'; fi`
	mv -f $(DEPDIR)/sql_tokenizer_gen-sql-tokenizer-gen.Tpo $(DEPDIR)/sql_tokenizer_gen-sql-tokenizer-gen.Po
#	source='sql-tokenizer-gen.c' object='sql_tokenizer_gen-sql-tokenizer-gen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sql_tokenizer_gen_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sql_tokenizer_gen-sql-tokenizer-gen.obj `if test -f 'sql-tokenizer-gen.c'; then $(CYGPATH_W) 'sql-tokenizer-gen.c'; else $(CYGPATH_W) '$(srcdir)/sql-tokenizer-gen.c'; fi`

sql_tokenizer_gen-sql-tokenizer-tokens.o: sql-tokenizer-tokens.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sql_tokenizer_gen_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sql_tokenizer_gen-sql-tokenizer-tokens.o -MD -MP -MF $(DEPDIR)/sql_tokenizer_gen-sql-tokenizer-tokens.Tpo -c -o sql_tokenizer_gen-sql-tokenizer-tokens.o `test -f 'sql-tokenizer-tokens.c' || echo '$(srcdir)/'`sql-tokenizer-tokens.c
	mv -f $(DEPDIR)/sql_tokenizer_gen-sql-tokenizer-tokens.Tpo $(DEPDIR)/sql_tokenizer_gen-sql-tokenizer-tokens.Po
#	source='sql-tokenizer-tokens.c' object='sql_tokenizer_gen-sql-tokenizer-tokens.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sql_tokenizer_gen_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sql_tokenizer_gen-sql-tokenizer-tokens.o `test -f 'sql-tokenizer-tokens.c' || echo '$(srcdir)/'`sql-tokenizer-tokens.c

sql_tokenizer_gen-sql-tokenizer-tokens.obj: sql-tokenizer-tokens.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sql_tokenizer_gen_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sql_tokenizer_gen-sql-tokenizer-tokens.obj -MD -MP -MF $(DEPDIR)/sql_tokenizer_gen-sql-tokenizer-tokens.Tpo -c -o sql_tokenizer_gen-sql-tokenizer-tokens.obj `if test -f 'sql-tokenizer-tokens.c'; then $(CYGPATH_W) 'sql-tokenizer-tokens.c'; else $(CYGPATH_W) '$(srcdir)/sql-tokenizer-tokens.c'; fi`
	mv -f $(DEPDIR)/sql_tokenizer_gen-sql-tokenizer-tokens.Tpo $(DEPDIR)/sql_tokenizer_gen-sql-tokenizer-tokens.Po
#	source='sql-tokenizer-tokens.c' object='sql_tokenizer_gen-sql-tokenizer-tokens.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sql_tokenizer_gen_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sql_tokenizer_gen-sql-tokenizer-tokens.obj `if test -f 'sql-tokenizer-tokens.c'; then $(CYGPATH_W) 'sql-tokenizer-tokens.c'; else $(CYGPATH_W) '$(srcdir)/sql-tokenizer-tokens.c'; fi`

.l.c:
	$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-dist_docDATA: $(dist_doc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(docdir)" || $(MKDIR_P) "$(DESTDIR)$(docdir)"
	@list='$(dist_doc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_docDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(docdir)/$$f'"; \
	  $(dist_docDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(docdir)/$$f"; \
	done

uninstall-dist_docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_doc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(docdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(docdir)/$$f"; \
	done
install-dist_luaextDATA: $(dist_luaext_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(luaextdir)" || $(MKDIR_P) "$(DESTDIR)$(luaextdir)"
	@list='$(dist_luaext_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_luaextDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(luaextdir)/$$f'"; \
	  $(dist_luaextDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(luaextdir)/$$f"; \
	done

uninstall-dist_luaextDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_luaext_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(luaextdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(luaextdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(luaextdir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(luaextdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f sql-tokenizer.c
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-luaextLTLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-dist_docDATA install-dist_luaextDATA \
	install-luaextLTLIBRARIES

install-dvi: install-dvi-recursive

install-exec-am:

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-dist_docDATA uninstall-dist_luaextDATA \
	uninstall-luaextLTLIBRARIES

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic clean-libtool \
	clean-luaextLTLIBRARIES clean-noinstPROGRAMS ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dist_docDATA install-dist_luaextDATA \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-luaextLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-dist_docDATA uninstall-dist_luaextDATA \
	uninstall-luaextLTLIBRARIES


sql-tokenizer.c: sql-tokenizer-keywords.c

sql-tokenizer-keywords.c: sql-tokenizer-gen
	${builddir}/sql-tokenizer-gen > ${builddir}/sql-tokenizer-keywords.c
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
